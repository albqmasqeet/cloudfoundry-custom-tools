#!/bin/bash

PROPERTIES_FILE=$1
RESOURCES_FILE=$2
PRODUCT_NAME=$3
OUTPUT_DIR=$4

if [ ! -d "$OUTPUT_DIR/tasks/config-$PRODUCT_NAME" ]; then
    mkdir -p "$OUTPUT_DIR/tasks/config-$PRODUCT_NAME"
fi

OUTFILE="$OUTPUT_DIR/tasks/config-$PRODUCT_NAME/task.sh"

if [ -f "$OUTFILE" ]; then
    rm -f "$OUTFILE"
fi

touch "$OUTFILE"

echo -e "#!/bin/bash\n\n" >> "$OUTFILE"

## Properties

echo 'properties_config=$(jq -n \' >> "$OUTFILE"

val='{"value": "$\(.key | split(".") | .[-1])"}'
IFS='' read -r -d '' CONVERT_SCRIPT << EOF
to_entries |
map(
    if (.value.value | type) == "object"
    then . + {"value": {"secret": $val}}
    else . + {"value": $val} end
) |
from_entries
EOF

ARGS=
KEYS=$(cat "$PROPERTIES_FILE" | jq -r 'keys[] | split(".") | .[-1]')
JSON=$(cat "$PROPERTIES_FILE" | jq "$CONVERT_SCRIPT" | sed 's/\"\(\$.*\)\"/\1/g')

for key in $KEYS; do
  echo "  --arg $key \$$(echo $key | awk '{print toupper($0)}') \\" >> "$OUTFILE"
done

echo "'$JSON'" >> "$OUTFILE"

echo -e ')\n\n' >> "$OUTFILE"


## Resources

echo 'resources_config="{' >> "$OUTFILE"

KEYS=$(cat "$RESOURCES_FILE" | jq -r '.resources | .[] | .identifier' )
j=$(cat $RESOURCES_FILE | jq '.resources | length')
i=0
for key in $KEYS; do
  echo -n "  \\\"$key\\\": {\\\"instances\\\": \$$(echo $key | sed 's/-/_/g' | awk '{print toupper($0)}')_INSTANCES}" >> "$OUTFILE"

  if [ $((i)) -ne $((j)) ]; then
      echo -n "," >> "$OUTFILE"
  fi

  echo >> "$OUTFILE"
done
unset i j

echo -e '}"\n\n' >> "$OUTFILE"

## Network

echo 'network_config=$(jq -n \' >> "$OUTFILE"
echo '  --arg network_name "$NETWORK_NAME" \ ' >> "$OUTFILE"
echo '  --arg other_azs "$SERVICES_NW_AZS" \ ' >> "$OUTFILE"
echo '  --arg singleton_az "$SERVICE_SINGLETON_JOB_AZ" \ ' >> "$OUTFILE"
echo "'" >> "$OUTFILE"
echo '  {' >> "$OUTFILE"
echo '    "network": {' >> "$OUTFILE"
echo '      "name": $network_name' >> "$OUTFILE"
echo '    },' >> "$OUTFILE"
echo '    "other_availability_zones": ($other_azs | split(",") | map({name: .})),' >> "$OUTFILE"
echo '    "singleton_availability_zone": {' >> "$OUTFILE"
echo '      "name": $singleton_az' >> "$OUTFILE"
echo '    }' >> "$OUTFILE"
echo '  }' >> "$OUTFILE"
echo "'" >> "$OUTFILE"
echo -e ')\n\n' >> "$OUTFILE"

## Run

echo 'om-linux \' >> "$OUTFILE"
echo '  --target https://$OPSMAN_DOMAIN_OR_IP_ADDRESS \' >> "$OUTFILE"
echo '  --username "$OPS_MGR_USR" \' >> "$OUTFILE"
echo '  --password "$OPS_MGR_PWD" \' >> "$OUTFILE"
echo '  --skip-ssl-validation \' >> "$OUTFILE"
echo '  configure-product \' >> "$OUTFILE"
echo "  --product-name $PRODUCT_NAME \\" >> "$OUTFILE"
echo '  --product-properties "$properties_config" \' >> "$OUTFILE"
echo '  --product-network "$network_config" \' >> "$OUTFILE"
echo '  --product-resources "$resources_config"' >> "$OUTFILE"
