#!/bin/bash

set -e

source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"/.init.sh

###
# Cleanups JSON from the `/api/v0/stage/:product_name/properties` endpoint into
#   JSON for importing to the `task.sh` file.
#
# Parameters:
#   {string} INPUT        The JSON file to cleanup
#   {string} PRODUCT_NAME The name of the product whose JSON is being cleaned up
##

## Validation

if [ ! -r "$INPUT" ]; then
  ERR_CODE=4 error "Provided input file $INPUT does not exist or is not readable."
fi

## Variables

declare -a DELETE=(type optional credential guid options configurable)
declare JSON=$(cat "$INPUT")

## Main

log "Deleting non configurable properties"
for KEY in $(echo "$JSON" | "$JQ_CMD" -r '.[] | keys[]' | sed "s/,/ /g"); do
  IS_NON_CONFIGURABLE=$(echo "$JSON" | "$JQ_CMD" --arg "key" "$KEY" '.properties[$key] | select(.configurable==false)')
  if [ ! -z "$IS_NON_CONFIGURABLE" ]; then
    JSON=$(echo "$JSON" | "$JQ_CMD" --arg "key" "$KEY" 'del(.properties[$key])')
  fi
  unset IS_NON_CONFIGURABLE
done

log "Deleting keys: (${DELETE[@]}) from $INPUT"
for key in "${DELETE[@]}"; do
  JSON=$(echo "$JSON" | "$JQ_CMD" -L "$(__DIR__)" --arg 'key' "$key" 'import "library" as lib;
    lib::walk(if type == "object" then del(.[$key]) else . end)')
done

echo "$JSON" | "$JQ_CMD" '.[]' > "$OUTPUT"/"$PRODUCT_NAME"-modified.json


echo "Wrote output to $OUTPUT/$PRODUCT_NAME-modified.json"

## Cleanup

unset __DIR__ DELETE JSON
