#!/bin/bash -e

PROPERTIES_FILE=$1
PRODUCT_NAME=$2
OUTPUT_DIR=$3

if [ ! -d "$OUTPUT_DIR/modified" ]; then
    mkdir -p $OUTPUT_DIR/modified
fi

if [[ -z "$PROPERTIES_FILE" ]]; then
  echo "Provided file $PROPERTIES_FILE does not exist."
  exit 1
fi

UPDATED_JSON=$(cat $PROPERTIES_FILE | $JQ_CMD -L $PWD 'import "library" as lib;
   lib::walk(if type == "object" then del(.type) else . end)')

UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD -L $PWD 'import "library" as lib;
   lib::walk(if type == "object" then del(.optional) else . end)')

UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD -L $PWD 'import "library" as lib;
  lib::walk(if type == "object" then del(.credential) else . end)')

UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD -L $PWD 'import "library" as lib;
  lib::walk(if type == "object" then del(.guid) else . end)')

UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD -L $PWD 'import "library" as lib;
  lib::walk(if type == "object" then del(.options) else . end)')

KEYS=$(echo "$UPDATED_JSON" | $JQ_CMD -r '.[] | keys[]')

for i in $(echo $KEYS | sed "s/,/ /g")
do
    KEY=$(echo $i)
    IS_NON_CONFIGURABLE=$(echo "$UPDATED_JSON" | $JQ_CMD --arg "key" "$KEY" '.properties[$key] | select(.configurable==false)')
    if [[ ! -z "$IS_NON_CONFIGURABLE" ]]; then
      UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD --arg "key" "$KEY" 'del(.properties[$key])')
    fi
done

UPDATED_JSON=$(echo "$UPDATED_JSON" | $JQ_CMD -L $PWD 'import "library" as lib;
  lib::walk(if type == "object" then del(.configurable) else . end)')

echo "$UPDATED_JSON" | $JQ_CMD '.[]' > $OUTPUT_DIR/modified/$PRODUCT_NAME.json
