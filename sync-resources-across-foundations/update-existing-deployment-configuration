#!/bin/bash -e

source $PWD/env
source $PWD/sync-resources-across-foundations/common

validate_cli $OM_CMD
validate_cli $JQ_CMD
validate_cli curl

validate_directory_exists $OUTPUT_DIR false

if [ ! -d "$OUTPUT_DIR" ]; then
  echo "$OUTPUT_DIR with the resource configurations does not exist"
  exit 1
fi

PRODUCTS_DEPLOYED=$($OM_CMD -k -t $OPS_MGR_HOST -u $OPS_MGR_USR -p $OPS_MGR_PWD curl -path /api/v0/deployed/products -s)

INSTALLATION_NAMES=$(echo "$PRODUCTS_DEPLOYED" | $JQ_CMD -r '.[].installation_name')

echo "$INSTALLATION_NAMES" | while read INSTALLATION_NAME
do
  if [[ "$INSTALLATION_NAME" != "p-bosh" ]]; then
    PRODUCT_TYPE=$(echo "$PRODUCTS_DEPLOYED" | $JQ_CMD -r --arg installation_name "$INSTALLATION_NAME" '.[] | select(.installation_name | contains($installation_name)) | .type')
    PRODUCT_JOBS=$($OM_CMD -k -t $OPS_MGR_HOST -u $OPS_MGR_USR -p $OPS_MGR_PWD curl -path /api/v0/staged/products/$INSTALLATION_NAME/jobs -s)
    PRODUCT_IDENTIFIER=$(echo "$PRODUCTS_DEPLOYED" | $JQ_CMD -r --arg installation_name "$INSTALLATION_NAME" '.[] | select(.installation_name | contains($installation_name)) | .guid')

    if [[ -f $OUTPUT_DIR/$PRODUCT_TYPE-resources.json ]]; then
      IDENTIFIERS=$(cat $OUTPUT_DIR/$PRODUCT_TYPE-resources.json | $JQ_CMD -r '.resources[] | .identifier')
      CURRENT_PRODUCT_RESOURCES=$($OM_CMD -k -t $OPS_MGR_HOST -u $OPS_MGR_USR -p $OPS_MGR_PWD curl -path /api/v0/staged/products/$INSTALLATION_NAME/resources -s)

      echo "$IDENTIFIERS" | while read IDENTIFIER
      do
        EXPECTED_PRODUCT_RESOURCE=$(cat $OUTPUT_DIR/$PRODUCT_TYPE-resources.json | $JQ_CMD -r --arg IDENTIFIER $IDENTIFIER '.resources[] | select(.identifier==$IDENTIFIER)')
        EXPECTED_INSTANCE_TYPE=$(echo "$EXPECTED_PRODUCT_RESOURCE" | $JQ_CMD -r '.instance_type_id')
        EXPECTED_INSTANCES=$(echo "$EXPECTED_PRODUCT_RESOURCE" | $JQ_CMD -r '.instances')
        EXPECTED_PERSISTENT_DISK_SIZE_MB=$(echo "$EXPECTED_PRODUCT_RESOURCE" | $JQ_CMD -r '.persistent_disk_mb')

        CURRENT_PRODUCT_RESOURCE=$(echo "$CURRENT_PRODUCT_RESOURCES" | $JQ_CMD -r --arg IDENTIFIER $IDENTIFIER '.resources[] | select(.identifier==$IDENTIFIER)')
        CURRENT_INSTANCE_TYPE=$(echo "$CURRENT_PRODUCT_RESOURCE" | $JQ_CMD -r '.instance_type_id')
        CURRENT_INSTANCES=$(echo "$CURRENT_PRODUCT_RESOURCE" | $JQ_CMD -r '.instances')
        CURRENT_PERSISTENT_DISK_SIZE_MB=$(echo "$CURRENT_PRODUCT_RESOURCE" | $JQ_CMD -r '.persistent_disk_mb')

        RESOURCE=$(echo "$CURRENT_PRODUCT_RESOURCE" | $JQ_CMD -r '.identifier')


        if [[ ("$EXPECTED_INSTANCE_TYPE" != "$CURRENT_INSTANCE_TYPE") \
              || ("$EXPECTED_INSTANCES" != "$CURRENT_INSTANCES") \
              || ("$EXPECTED_PERSISTENT_DISK_SIZE_MB" != "$CURRENT_PERSISTENT_DISK_SIZE_MB") ]]; then
          update_resource_configuration "$RESOURCE" "$EXPECTED_INSTANCE_TYPE" \
            "$EXPECTED_INSTANCES" "$EXPECTED_PERSISTENT_DISK_SIZE_MB" \
            "$PRODUCT_JOBS" "$PRODUCT_IDENTIFIER"
        else
          echo "No configuration changes for resource $RESOURCE in the deployment $INSTALLATION_NAME, hence skipping..."
        fi

      done

      echo "Successfully updated the $PRODUCT_IDENTIFIER configuration"
    else
      echo "Skipping updating the $PRODUCT_IDENTIFIER configuration as the $OUTPUT_DIR/$PRODUCT_TYPE-resources.json does not exist"
    fi
  fi
done
